version: 2

# Configuration
job_defaults_var: &job_defaults
  working_directory: ~/workspace/app
  docker:
    - image: circleci/node:8-browsers

# Yarn cache key
cache_var: &cache_key yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}

# Install yarn packages
yarn_install_var: &yarn_install
  run:
    name: Yarn Install Packages
    # We install deps based on the frozen yarn file, so we know it's always the same
    command: yarn install --cache-folder ~/.yarn-cache --frozen-lockfile --non-interactive

# Save yarn cache
save_cache_var: &save_cache
  save_cache:
    name: Save Yarn Package Cache
    key: *cache_key
    paths:
      - ~/.yarn-cache
      - node_modules

# Restore yarn cache
restore_cache_var: &restore_cache
  restore_cache:
    name: Restore Yarn Package Cache
    keys:
      - *cache_key
      - yarn-packages-master
      - yarn-packages-

# Persist the whole working space so we can share it between jobs
persist_workspace_var: &persist_workspace
  persist_to_workspace:
    # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
    # taken to be the root directory of the workspace.
    root: ~/workspace
    # Must be relative path from root
    paths:
      - app

# Persist test coverage
persist_coverage_var: &persist_coverage
  persist_to_workspace:
    root: ~/workspace
    paths:
      - app/coverage

# Attach working space
attach_workspace_var: &attach_workspace
  attach_workspace:
    # Must be absolute path or relative path from working_directory
    at: ~/workspace

#
# Jobs
#
jobs:
  build:
    <<: *job_defaults
    steps:
      - checkout
      - *restore_cache
      - *yarn_install
      - *save_cache
      - run:
          name: Compile NGXS
          command: yarn build
      - run:
          name: Create Pack
          command: yarn pack --filename ngxs-core.tgz
      - *persist_workspace
      - store_artifacts:
          path: ngxs-core.tgz
      - store_artifacts:
          path: docs
          destination: docs

  lint:
    <<: *job_defaults
    steps:
      - *attach_workspace
      - run:
          name: Lint
          command: yarn lint

  unit_tests:
    <<: *job_defaults
    steps:
      - *attach_workspace
      - run:
          name: Unit Tests
          command: yarn test:ci
      - *persist_coverage

  integration_tests:
    <<: *job_defaults
    steps:
      - *attach_workspace
      - run:
          name: Integration Tests
          command: yarn test:ci:integration
      # - *persist_coverage // we don't run code coverage for integration tests

  upload_coverage:
    <<: *job_defaults
    environment:
      - CC_TEST_REPORTER_ID: 773daba318367797acb253047e7e1e6977098258e30d16990e880cf4df8d8240
    steps:
      - *attach_workspace
      - run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /tmp/cc-test-reporter
      - run: chmod +x /tmp/cc-test-reporter
      - run:
          name: Upload coverage results to Code Climate
          command: /tmp/cc-test-reporter < ~/workspace/app/coverage/lcov.info

  # Publish latest build to npm under the @next tag
  publish_build_to_npm:
    <<: *job_defaults
    steps:
      - *attach_workspace
      - run:
          name: Publish Build to NPM @ngxs/core@next
          command: |
            CURRENT_VERSION=$(node -pe "require('./package.json').version")
            SHORT_SHA1=$(echo $CIRCLE_SHA1 | cut -c -7)
            yarn publish --access public --non-interactive --new-version $CURRENT_VERSION+dev.$SHORT_SHA1 --tag next

#
# Workflow
#
workflows:
  version: 2
  build-workflow:
    jobs:

      - build

      - lint:
          requires:
            - build

      - unit_tests:
          requires:
            - build

      - integration_tests:
          requires:
            - build

      - upload_coverage:
          requires:
            - unit_tests
            - integration_tests

      - publish_build_to_npm:
          filters:
            branches:
              - master
          requires:
            - unit_tests
            - integration_tests
