# For more information see:
# - https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# - https://docs.github.com/en/actions/learn-github-actions/contexts#github-context

name: trunk

on:
  push:
    branches: [master]
    tags-ignore: ['*']

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.ref_name }}.${{ github.sha }}.trunk
  cancel-in-progress: true

jobs:
  trunk-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup
        with:
          NODE_VERSION: 16.x
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}

      - name: Build NGXS
        run: yarn build

  trunk-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        script: [lint, eslint, 'test:ci', 'test:types']

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup
        with:
          NODE_VERSION: ${{ matrix.node-version }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}

      - name: Run ${{ matrix.script }}
        run: yarn ${{ matrix.script }}

      - name: Upload coverage results to Code Climate
        if: ${{ matrix.script == 'test:ci' }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /tmp/cc-test-reporter
          chmod +x /tmp/cc-test-reporter
          /tmp/cc-test-reporter after-build --coverage-input-type lcov --exit-code 0
        env:
          CC_TEST_REPORTER_ID: 3f4c9a9d57ded045e0f9ab5d23e5bbcbf709bb85637bea555f1233e72134b818 # TODO: better store it in the repository secrets. Name the variable: CC_TEST_REPORTER_ID. Then delete this line and uncomment the next one
          # CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

  trunk-integration-test:
    runs-on: ubuntu-latest
    needs: trunk-build

    strategy:
      matrix:
        node-version: [16.x]
        script:
          - 'integration:ng7'
          - 'integration:ng8'
          - 'integration:ng9:ivy:off'
          - 'integration:ng9:ivy'
          - 'integration:ng10:ivy:off'
          - 'integration:ng10:ivy'
          - 'integration:ng11:ivy:off'
          - 'integration:ng11:ivy'
          - 'integration:ng12:ivy'
          - 'integration:ng13:ivy'

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup
        with:
          NODE_VERSION: ${{ matrix.node-version }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}

      - name: Run ${{ matrix.script }}
        run: yarn ${{ matrix.script }}

  trunk-bundlesize:
    runs-on: ubuntu-latest
    needs: trunk-integration-test

    strategy:
      matrix:
        node-version: [16.x]
        script: [bundlesize]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup
        with:
          NODE_VERSION: ${{ matrix.node-version }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}

      - name: Run ${{ matrix.script }}
        run: yarn ${{ matrix.script }}

  trunk-publish:
    runs-on: ubuntu-latest
    environment: npm-publish
    needs: [trunk-build, trunk-test, trunk-integration-test, trunk-bundlesize]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup
        with:
          NODE_VERSION: 16.x
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}

      - name: Check @ngxs build artifacts
        uses: ./.github/actions/check-build-artifacts

      - name: Development release - publish development builds to all @ngxs packages
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          yarn publish:dev
          echo "Security: remove ~/.npmrc from the runner overwriting it with zeros several times."
          find ~/.npmrc -exec shred -fuz {} +
